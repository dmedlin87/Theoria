name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      SETTINGS_SECRET_KEY: geo-ci-secret
      FIXTURES_ROOT: ${{ github.workspace }}/fixtures
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c5da571f2b78bb0f1e0ed4f49845d2a1

      - name: Set up Python
        uses: actions/setup-python@14e5d8d0cc76a3b4e5a962d648a3976db0f62d48
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Set up Node.js
        uses: actions/setup-node@0d8d6c353e9846fae10c9f4b8cc2f48ba5f3d580
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: theo/services/web/package-lock.json

      - name: Install Node.js dependencies
        working-directory: theo/services/web
        run: npm ci

      - name: Install Playwright browsers
        working-directory: theo/services/web
        run: npx playwright install --with-deps

      - name: Run Ruff
        run: ruff check

      - name: Run mypy
        run: mypy --config-file mypy.ini

      - name: Run ESLint and TypeScript checks
        working-directory: theo/services/web
        run: npm run lint

      - name: Enforce UI quality gates
        working-directory: theo/services/web
        run: npm run quality:gates

      - name: Run Jest unit tests
        working-directory: theo/services/web
        run: npm test

      - name: Run Vitest unit tests with coverage
        working-directory: theo/services/web
        run: npm run test:vitest

      - name: Run Playwright smoke suite
        working-directory: theo/services/web
        run: npm run test:e2e:smoke

      - name: Run Playwright full suite
        working-directory: theo/services/web
        run: npm run test:e2e:full

      - name: Run pytest suite
        run: pytest --cov=theo --cov=tests --cov-report=xml --cov-report=term --cov-fail-under=80

      - name: Upload pytest coverage report
        if: always()
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: pytest-coverage
          path: coverage.xml
          if-no-files-found: error

      - name: Enforce critical coverage thresholds
        run: python scripts/security/verify_critical_coverage.py

      - name: Run Geo pytest suite
        run: pytest tests/geo -q

      - name: Run contract tests
        run: pytest tests/contracts/test_schemathesis.py

      - name: Generate Python SBOM
        run: cyclonedx-bom --spec-version 1.5 --requirements requirements.txt --outfile sbom-python.json --format json

      - name: Generate Node SBOM
        working-directory: theo/services/web
        run: npx --yes @cyclonedx/cyclonedx-npm@1.12.0 --output-format json --output-file ../../sbom-node.json

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: cyclonedx-sboms
          path: |
            sbom-python.json
            sbom-node.json
          if-no-files-found: error

      - name: Upload Vitest coverage report
        if: always()
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: vitest-coverage
          path: theo/services/web/coverage
          if-no-files-found: warn

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: playwright-artifacts
          path: |
            theo/services/web/playwright-report
            theo/services/web/playwright-artifacts

  web_accessibility:
    name: Web axe accessibility scans
    runs-on: ubuntu-latest
    needs: test
    env:
      PYTHONPATH: ${{ github.workspace }}
      SETTINGS_SECRET_KEY: geo-ci-secret
      FIXTURES_ROOT: ${{ github.workspace }}/fixtures
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c5da571f2b78bb0f1e0ed4f49845d2a1

      - name: Set up Python
        uses: actions/setup-python@14e5d8d0cc76a3b4e5a962d648a3976db0f62d48
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Set up Node.js
        uses: actions/setup-node@0d8d6c353e9846fae10c9f4b8cc2f48ba5f3d580
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: theo/services/web/package-lock.json

      - name: Install Node.js dependencies
        working-directory: theo/services/web
        run: npm ci

      - name: Install Playwright browsers
        working-directory: theo/services/web
        run: npx playwright install --with-deps

      - name: Run axe accessibility scans
        working-directory: theo/services/web
        env:
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8000"
          THEO_ALLOW_INSECURE_STARTUP: "1"
          THEO_AUTH_ALLOW_ANONYMOUS: "1"
        run: npm run test:a11y

      - name: Upload accessibility artifacts
        if: always()
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: axe-playwright-artifacts
          path: |
            theo/services/web/playwright-report
            theo/services/web/playwright-artifacts
          if-no-files-found: warn

  web_lighthouse:
    name: Web Lighthouse smoke tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c5da571f2b78bb0f1e0ed4f49845d2a1

      - name: Set up Node.js
        uses: actions/setup-node@0d8d6c353e9846fae10c9f4b8cc2f48ba5f3d580
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: theo/services/web/package-lock.json

      - name: Install Node.js dependencies
        working-directory: theo/services/web
        run: npm ci

      - name: Run Lighthouse smoke tests
        working-directory: theo/services/web
        env:
          APP_ORIGIN: http://127.0.0.1:3000
          NEXT_TELEMETRY_DISABLED: '1'
        run: npm run test:lighthouse:smoke

      - name: Upload Lighthouse artifacts
        if: always()
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: lighthouse-smoke
          path: |
            theo/services/web/.lighthouseci
  secrets-scan:
    name: Secrets scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c5da571f2b78bb0f1e0ed4f49845d2a1
        with:
          fetch-depth: 0

      - name: Run TruffleHog secret scan
        uses: trufflesecurity/trufflehog@ba4e712752d434a624f012d9d9f4f11892ca6c8e
        with:
          scan: git
          extra_args: "--fail --only-verified --json --results-file trufflehog-results.json"

      - name: Upload TruffleHog findings
        if: always()
        uses: actions/upload-artifact@5d5e935c1fdc8b229b1f4d02bbf9f74413c9f1a4
        with:
          name: trufflehog-report
          path: trufflehog-results.json
          if-no-files-found: warn
