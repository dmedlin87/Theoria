[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "theoria"
version = "0.0.0"
description = "Theo application"
readme = "README.md"
requires-python = ">=3.11"
dependencies = []

[project.optional-dependencies]
base = [
    "apscheduler>=3.10,<4",
    "cachetools>=5.3,<7",
    "celery==5.5.3",
    "click>=8.1,<9",
    "cryptography==46.0.3",
    "defusedxml>=0.7.1,<0.8",
    "httpx>=0.28.1,<0.29",
    "neo4j>=5.20,<6",
    "opentelemetry-api>=1.25.0,<2",
    "opentelemetry-sdk>=1.25.0,<2",
    "prometheus-client>=0.20,<1",
    "pydantic>=2.5,<3",
    "pydantic-settings>=2.1,<3",
    "pypdf==6.1.3",
    "PyJWT==2.10.1",
    "python-multipart==0.0.20",
    "pythonbible>=0.13.1,<0.14",
    "PyYAML>=6.0,<7",
    "sqlalchemy==2.0.44",
    "typing-extensions>=4.9,<5",
    "webvtt-py==0.5.1",
]
api = [
    "apscheduler>=3.10,<4",
    "cachetools>=5.3,<7",
    "celery==5.5.3",
    "click>=8.1,<9",
    "cryptography==46.0.3",
    "defusedxml>=0.7.1,<0.8",
    "fastapi==0.119.0",
    "httpx>=0.28.1,<0.29",
    "neo4j>=5.20,<6",
    "opentelemetry-api>=1.25.0,<2",
    "opentelemetry-sdk>=1.25.0,<2",
    "prometheus-client>=0.20,<1",
    "pydantic>=2.5,<3",
    "pydantic-settings>=2.1,<3",
    "pypdf==6.1.3",
    "PyJWT==2.10.1",
    "python-multipart==0.0.20",
    "pythonbible>=0.13.1,<0.14",
    "PyYAML>=6.0,<7",
    "sqlalchemy==2.0.44",
    "strawberry-graphql[fastapi]==0.220.0",
    "typing-extensions>=4.9,<5",
    "uvicorn[standard]==0.38.0",
    "webvtt-py==0.5.1",
]
ml = [
    "bertopic>=0.15,<1",
    "datasets>=2.19,<5",
    "evaluate>=0.4,<1",
    "FlagEmbedding>=1.2,<2",
    "joblib>=1.3,<2",
    "networkx>=3.0,<4",
    "numpy>=1.24,<3",
    "ragas>=0.1.13,<0.2",
    "scikit-learn>=1.4,<2",
    "scipy>=1.10,<2",
    "sentencepiece>=0.2.0,<0.3",
    "threadpoolctl>=3.1,<4",
    "torch==2.4.0",
    "transformers>=4.30,<5",
]
dev = [
    "cyclonedx-bom==7.2.0",
    "hypothesis==6.124.6",
    "import-linter==2.0",
    "mypy==1.18.2",
    "pip-tools>=7.4.1,<8",
    "pytest-cov==5.0.0",
    "pytest-randomly==3.15.0",
    "pytest-split==0.10.0",
    "pytest-timeout==2.3.1",
    "pytest-xdist==3.6.1",
    "pytest>=8.3,<9",
    "pytest-profiling==1.7.0",
    "psutil>=5.9,<6",
    "ruff==0.14.0",
    "testcontainers==4.13.2",
    "types-PyYAML>=6.0.12.20240917",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"theo.data.research" = ["*.json"]

[tool.setuptools.packages.find]
where = ["."]
include = ["theo*", "mcp_server*"]
exclude = ["tests*", "fixtures*", "data*", "infra*", "metrics*", "ranking*", "contracts*", "dashboard*"]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["theo"]
combine_as_imports = true

[tool.mypy]
python_version = "3.11"
files = [
    "theo/services/api/app",
    "theo/services/api/tests",
    "tests/export",
]
ignore_missing_imports = true
warn_unused_configs = true
warn_unused_ignores = true
follow_imports = "skip"

[tool.pytest.ini_options]
# Coverage disabled by default for faster test discovery
# To run with coverage: pytest --cov=theo --cov-report=term-missing --cov-report=xml --cov-fail-under=80
addopts = [
    "-ra",
    "--strict-markers",
    "--timeout=60",
    "--durations=50",
    "--durations-min=0.05",
    "-n=auto",
    "--dist=worksteal",
]
testpaths = ["tests"]
norecursedirs = [
    ".git",
    ".venv",
    ".tox",
    "dist",
    "build",
    "node_modules",
    ".*",
    "__pycache__",
]
markers = [
    "redteam: OWASP LLM red-team regression suite",
    "no_auth_override: disable authentication override fixture for security assertions",
    "slow: long-running tests that require opt-in",
    "enable_migrations: allow database migrations to execute in tests",
    "pgvector: tests that require the pgvector/Postgres testcontainer",
    "schema: tests that require database schema migrations",
    "contract: contract-level compatibility suites",
    "gpu: tests that require GPU runtimes or CUDA dependencies",
    "e2e: end-to-end/system tests",
    "db: database-hitting tests",
    "network: tests that would reach network if not mocked",
    "perf: benchmark-style performance checks",
    "flaky: known-intermittent tests",
    "xdist_group: marker for grouping tests by xdist",
]
filterwarnings = [
    "ignore:jsonschema.exceptions.RefResolutionError is deprecated:DeprecationWarning",
    "ignore:jsonschema.RefResolver is deprecated as of v4.18.0:DeprecationWarning",
    "ignore:Can't sort tables for DROP; an unresolvable foreign key dependency exists between tables:Warning",
]
