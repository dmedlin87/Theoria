Metadata-Version: 2.4
Name: theoria
Version: 0.0.0
Summary: Theo application
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Provides-Extra: base
Requires-Dist: apscheduler<4,>=3.10; extra == "base"
Requires-Dist: cachetools<7,>=5.3; extra == "base"
Requires-Dist: celery==5.5.3; extra == "base"
Requires-Dist: click<9,>=8.1; extra == "base"
Requires-Dist: cryptography==46.0.3; extra == "base"
Requires-Dist: defusedxml<0.8,>=0.7.1; extra == "base"
Requires-Dist: httpx<0.29,>=0.28.1; extra == "base"
Requires-Dist: neo4j<6,>=5.20; extra == "base"
Requires-Dist: opentelemetry-api<2,>=1.25.0; extra == "base"
Requires-Dist: opentelemetry-sdk<2,>=1.25.0; extra == "base"
Requires-Dist: prometheus-client<1,>=0.20; extra == "base"
Requires-Dist: pydantic<3,>=2.5; extra == "base"
Requires-Dist: pydantic-settings<3,>=2.1; extra == "base"
Requires-Dist: pypdf==6.1.3; extra == "base"
Requires-Dist: PyJWT==2.10.1; extra == "base"
Requires-Dist: python-multipart==0.0.20; extra == "base"
Requires-Dist: pythonbible<0.14,>=0.13.1; extra == "base"
Requires-Dist: PyYAML<7,>=6.0; extra == "base"
Requires-Dist: sqlalchemy==2.0.44; extra == "base"
Requires-Dist: typing-extensions<5,>=4.9; extra == "base"
Requires-Dist: webvtt-py==0.5.1; extra == "base"
Provides-Extra: api
Requires-Dist: apscheduler<4,>=3.10; extra == "api"
Requires-Dist: cachetools<7,>=5.3; extra == "api"
Requires-Dist: celery==5.5.3; extra == "api"
Requires-Dist: click<9,>=8.1; extra == "api"
Requires-Dist: cryptography==46.0.3; extra == "api"
Requires-Dist: defusedxml<0.8,>=0.7.1; extra == "api"
Requires-Dist: fastapi==0.119.0; extra == "api"
Requires-Dist: httpx<0.29,>=0.28.1; extra == "api"
Requires-Dist: neo4j<6,>=5.20; extra == "api"
Requires-Dist: opentelemetry-api<2,>=1.25.0; extra == "api"
Requires-Dist: opentelemetry-sdk<2,>=1.25.0; extra == "api"
Requires-Dist: prometheus-client<1,>=0.20; extra == "api"
Requires-Dist: pydantic<3,>=2.5; extra == "api"
Requires-Dist: pydantic-settings<3,>=2.1; extra == "api"
Requires-Dist: pypdf==6.1.3; extra == "api"
Requires-Dist: PyJWT==2.10.1; extra == "api"
Requires-Dist: python-multipart==0.0.20; extra == "api"
Requires-Dist: pythonbible<0.14,>=0.13.1; extra == "api"
Requires-Dist: PyYAML<7,>=6.0; extra == "api"
Requires-Dist: sqlalchemy==2.0.44; extra == "api"
Requires-Dist: strawberry-graphql[fastapi]==0.220.0; extra == "api"
Requires-Dist: typing-extensions<5,>=4.9; extra == "api"
Requires-Dist: uvicorn[standard]==0.38.0; extra == "api"
Requires-Dist: webvtt-py==0.5.1; extra == "api"
Provides-Extra: ml
Requires-Dist: bertopic<1,>=0.15; extra == "ml"
Requires-Dist: datasets<5,>=2.19; extra == "ml"
Requires-Dist: evaluate<1,>=0.4; extra == "ml"
Requires-Dist: FlagEmbedding<2,>=1.2; extra == "ml"
Requires-Dist: joblib<2,>=1.3; extra == "ml"
Requires-Dist: networkx<4,>=3.0; extra == "ml"
Requires-Dist: numpy<3,>=1.24; extra == "ml"
Requires-Dist: ragas<0.2,>=0.1.13; extra == "ml"
Requires-Dist: scikit-learn<2,>=1.4; extra == "ml"
Requires-Dist: scipy<2,>=1.10; extra == "ml"
Requires-Dist: sentencepiece<0.3,>=0.2.0; extra == "ml"
Requires-Dist: threadpoolctl<4,>=3.1; extra == "ml"
Requires-Dist: torch==2.4.0; extra == "ml"
Requires-Dist: transformers<5,>=4.30; extra == "ml"
Provides-Extra: dev
Requires-Dist: cyclonedx-bom==7.2.0; extra == "dev"
Requires-Dist: hypothesis==6.124.6; extra == "dev"
Requires-Dist: import-linter==2.0; extra == "dev"
Requires-Dist: mypy==1.18.2; extra == "dev"
Requires-Dist: pip-tools<8,>=7.4.1; extra == "dev"
Requires-Dist: pytest-cov==5.0.0; extra == "dev"
Requires-Dist: pytest-randomly==3.15.0; extra == "dev"
Requires-Dist: pytest-split==0.10.0; extra == "dev"
Requires-Dist: pytest-timeout==2.3.1; extra == "dev"
Requires-Dist: pytest-xdist==3.6.1; extra == "dev"
Requires-Dist: pytest<9,>=8.3; extra == "dev"
Requires-Dist: ruff==0.14.0; extra == "dev"
Requires-Dist: testcontainers==4.13.2; extra == "dev"
Requires-Dist: types-PyYAML>=6.0.12.20240917; extra == "dev"

# Theoria

> **Deterministic research engine for theology.** Index your sources, normalize Scripture references, and retrieve verse-anchored evidence with AI assistance you can trust.

## Table of Contents
1. [Why Theoria](#why-theoria)
2. [Core Capabilities](#core-capabilities)
3. [System Overview](#system-overview)
4. [Quick Start](#quick-start)
5. [Local Development](#local-development)
6. [Documentation Map](#documentation-map)
7. [Support & Contribution](#support--contribution)

---

## Why Theoria

Theoria unifies your theological research library—papers, notes, transcripts, and audio—into a single verse-aware knowledge graph. Every result is anchored to normalized OSIS references, so citations remain verifiable whether you are preparing sermons, running comparative studies, or drafting devotionals.

**What you can expect:**
- **Grounded answers** backed by deterministic retrieval with citations for every verse.
- **Productivity workflows** that combine AI summarization with strict reference enforcement.
- **Operational confidence** with observability, testing, and performance guardrails baked in.

---

## Core Capabilities

| Area | Highlights |
| --- | --- |
| Retrieval | Hybrid semantic + lexical search, pgvector embeddings, deterministic verse aggregation |
| Scripture | Automatic OSIS normalization, verse span aggregation, cross-translation linking |
| Ingestion | Local files, URLs, YouTube, bulk CLI pipelines with citation preservation |
| Workflows | Sermon prep, comparative analysis, topic monitoring, export tooling (Markdown/NDJSON/CSV) |
| Experience | Modern Next.js UI, command palette (⌘K/CTRL+K), dark mode, WCAG 2.1 AA accessibility |
| Integrations | Model Context Protocol (MCP) server, API + CLI automation hooks |

Additional feature deep-dives live in [`docs/archive/`](docs/archive/).

---

## System Overview

```
┌──────────────┐      ┌───────────────────────┐      ┌────────────────┐
│ Ingestion    │──►──│ Retrieval Services     │──►──│ UI & MCP Tools │
│ (CLI & API)  │      │ (FastAPI + Workers)    │      │ (Next.js, MCP) │
└──────────────┘      └───────────────────────┘      └────────────────┘
        ▲                       │                         │
        │                       ▼                         ▼
  Documents & Media     Verse-normalized store      Research & authoring
```

- **API & Workers**: `theo/services/api` (FastAPI, background jobs, pgvector).
- **Web Experience**: `theo/services/web` (Next.js, Radix UI toolkit, theme system).
- **Docs & Playbooks**: `docs/` (architecture, workflows, policies).
- **Automation Scripts**: `scripts/` (dev orchestration, reseeding, evaluation).
- **Quality Gates**: `tests/` (unit, integration, ranking, MCP, UI smoke suites).

For architecture detail, start with [`docs/BLUEPRINT.md`](docs/BLUEPRINT.md) and the ADR directory under [`docs/adr/`](docs/adr/).

---

## Quick Start

1. **Clone & prepare environment**
   ```bash
   git clone https://github.com/.../theoria.git
   cd theoria
   python -m venv .venv && source .venv/bin/activate
   pip install ".[api]" -c constraints/api.txt
   pip install ".[ml]" -c constraints/ml.txt
   pip install ".[dev]" -c constraints/dev.txt
   ```

2. **Provision frontend tooling**
   ```bash
   cd theo/services/web
   npm install
   cd -
   ```

3. **Configure authentication** (choose one)
   ```bash
   export THEO_API_KEYS='["local-dev-key"]'
   # or
   export THEO_AUTH_ALLOW_ANONYMOUS=1  # development only
   ```

4. **Launch API**
   ```bash
   uvicorn theo.services.api.app.main:app --reload --host 127.0.0.1 --port 8000
   ```
   Visit the interactive docs at <http://localhost:8000/docs>.

5. **Launch Web UI**
   ```bash
   cd theo/services/web
   export NEXT_PUBLIC_API_BASE_URL="http://127.0.0.1:8000"
   export THEO_SEARCH_API_KEY="Bearer local-dev-key"  # remove "Bearer" to send via X-API-Key
   npm run dev
   ```
   Open <http://localhost:3000> and press ⌘K/CTRL+K to explore the command palette.

---

## Local Development

### One command dev loop
- **PowerShell**: `./scripts/dev.ps1`
- **Bash**: `./scripts/run.sh`

Both scripts boot the API and Next.js app, wiring ports and environment variables automatically. Pass `-IncludeMcp` or `-McpPort` to enable the MCP server alongside the stack.

### Dependency management
- Python extras live in `pyproject.toml` (`base`, `api`, `ml`, `dev`) with corresponding lockfiles under `constraints/`.
- Install extras with `pip install .[api] -c constraints/api.txt` plus `[ml]`/`[dev]` when ML features or tooling are required.
- Run `task deps:lock` after editing dependency definitions to regenerate the pinned constraints via `pip-compile`.

### Testing & quality gates
- **Python tests**: `pytest -q`
- **pgvector flows**: `PYTEST_USE_PGVECTOR=1 pytest -q`
- **Web tests**: from `theo/services/web`, run `npm test` or `npm run test:vitest`
- **Playwright smoke**: `npm run test:e2e:smoke`
- **Performance baselines**: Lighthouse CI policy lives in [`docs/performance.md`](docs/performance.md)

### Database seeding
- Unix/macOS: `./scripts/reset_reseed_smoke.py --log-level DEBUG`
- PowerShell: `./scripts/reset-reseed-smoke.ps1 -LogLevel DEBUG`

Override database URLs or API keys through the script flags when targeting Postgres or remote services.

### Docker Compose
```bash
cd infra
docker compose up --build -d
```
- Web: <http://localhost:3000>
- API: <http://localhost:8000/docs>
- MCP: `docker compose up mcp`

Stop with `docker compose down`.

---

## Documentation Map

| Category | Start Here |
| --- | --- |
| Architecture & Decisions | [`docs/BLUEPRINT.md`](docs/BLUEPRINT.md), [`docs/adr/`](docs/adr/) |
| APIs & Integration | [`docs/API.md`](docs/API.md), [`docs/mcp_integration_guide.md`](docs/mcp_integration_guide.md), [`docs/authentication.md`](docs/authentication.md) |
| CLI & Automation | [`docs/CLI.md`](docs/CLI.md), [`theo/services/cli`](theo/services/cli) |
| UI & UX | [`docs/archive/2025-10/`](docs/archive/2025-10/), [`theo/services/web/app/components/ui`](theo/services/web/app/components/ui) |
| Testing & Quality | [`docs/testing/TEST_MAP.md`](docs/testing/TEST_MAP.md), [`docs/performance.md`](docs/performance.md), [`SECURITY.md`](SECURITY.md) |
| Roadmaps & Case Builder | [`docs/CASE_BUILDER.md`](docs/CASE_BUILDER.md), [`docs/archive/2025-10/UI_OVERHAUL_SUMMARY.md`](docs/archive/2025-10/UI_OVERHAUL_SUMMARY.md) |

Use [`docs/INDEX.md`](docs/INDEX.md) as the master directory of all documentation.

---

## Support & Contribution

- Review [CONTRIBUTING.md](CONTRIBUTING.md) for branching, testing, and review expectations.
- Security questions? Consult [SECURITY.md](SECURITY.md) and the threat model in [`THREATMODEL.md`](THREATMODEL.md).
- Join the discussion via issues and pull requests—feature proposals with verse-anchored acceptance criteria are especially welcome.

---

**License**: Refer to the repository for license information.
